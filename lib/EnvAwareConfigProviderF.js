"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;require("source-map-support/register");var _nodePath=_interopRequireDefault(require("node:path"));var _july=require("@genx/july");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}const EnvAwareConfigProviderF=(EXT,PROVIDER,DEFAULT_FLAG="default")=>class{constructor(configDir,baseName,envFlag="development"){this._defConfigProvider=new PROVIDER(_nodePath.default.join(configDir,baseName+"."+DEFAULT_FLAG+EXT));this._envConfigProvider=new PROVIDER(_nodePath.default.join(configDir,baseName+"."+envFlag+EXT));this._envFlag=envFlag;this.config=undefined}async load_(logger){const defConfig=await this._defConfigProvider.load_(logger);const envConfig=await this._envConfigProvider.load_(logger);this.config=_july._.defaults({},envConfig,defConfig);if(logger&&!_july._.isEmpty(envConfig)){logger.log("info",`Configuration is overrided by environment-specific [env=${this._envFlag}] settings.`)}return this.config}async save_(){await this._envConfigProvider.save_()}setItem(key,value){_july._.set(this.config,key,value);this._envConfigProvider.setItem(key,value);return this}getItem(key,defaultValue){return _july._.get(this.config,key,defaultValue)}};var _default=EnvAwareConfigProviderF;exports.default=_default;module.exports=exports.default;
//# sourceMappingURL=EnvAwareConfigProviderF.js.map