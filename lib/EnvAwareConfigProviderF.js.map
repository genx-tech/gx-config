{"version":3,"file":"EnvAwareConfigProviderF.js","names":["_nodePath","_interopRequireDefault","require","_july","obj","__esModule","default","EnvAwareConfigProviderF","EXT","PROVIDER","DEFAULT_FLAG","constructor","configDir","baseName","envFlag","_defConfigProvider","path","join","_envConfigProvider","_envFlag","config","undefined","load_","logger","defConfig","envConfig","_","defaults","isEmpty","log","save_","setItem","key","value","set","getItem","defaultValue","get","_default","exports","module"],"sources":["../src/EnvAwareConfigProviderF.js"],"sourcesContent":["import path from 'node:path';\nimport { _ } from '@genx/july';\n\n/**\n * Environment-aware config provider factory\n * @param {string} EXT - File extension name, e.g. \".json\"\n * @param {class} PROVIDER - Config provider class\n * @param {string} [DEFAULT_FLAG=\"default\"] - Default flag\n */\nconst EnvAwareConfigProviderF = (EXT, PROVIDER, DEFAULT_FLAG = 'default') =>\n    class {\n        /**\n         * Environment-aware config provider\n         * @constructs EnvAwareConfigProvider\n         * @param {string} configDir - The base directory of config files\n         * @param {string} baseName - The basename of the config file\n         * @param {string} [envFlag=\"development\"] - Environment flag\n         */\n        constructor(configDir, baseName, envFlag = 'development') {\n            /**\n             * The raw default config\n             * @type {object}\n             * @private\n             */\n            this._defConfigProvider = new PROVIDER(\n                path.join(configDir, baseName + '.' + DEFAULT_FLAG + EXT)\n            );\n\n            /**\n             * The environment specific config\n             * @type {object}\n             * @public\n             */\n            this._envConfigProvider = new PROVIDER(\n                path.join(configDir, baseName + '.' + envFlag + EXT)\n            );\n\n            this._envFlag = envFlag;\n\n            /**\n             * The loaded config\n             * @type {object}\n             * @public\n             */\n            this.config = undefined;\n        }\n\n        /**\n         * Start loading the config files\n         * @memberof EnvAwareConfigProvider\n         * @returns {Promise.<object>}\n         */\n        async load_(logger) {\n            const defConfig = await this._defConfigProvider.load_(logger);\n            const envConfig = await this._envConfigProvider.load_(logger);\n\n            this.config = _.defaults({}, envConfig, defConfig);\n            if (logger && !_.isEmpty(envConfig)) {\n                logger.log(\n                    'info',\n                    `Configuration is overrided by environment-specific [env=${this._envFlag}] settings.`\n                );\n            }\n\n            return this.config;\n        }\n\n        /**\n         * Start saving the config to files\n         * @memberof EnvAwareConfigProvider\n         * @returns {Promise.<*>}\n         */\n        async save_() {\n            await this._envConfigProvider.save_();\n        }\n\n        /**\n         * Update config item by dotted path.\n         * @memberof EnvAwareConfigProvider\n         * @param {string} key - The path of config item, e.g. \"item.subItem.key\" refers to { item: { subItem: { key: \"*\" } } }\n         * @param {*} value - New value of config item\n         * @returns {JsonConfigProvider}\n         */\n        setItem(key, value) {\n            _.set(this.config, key, value);\n            this._envConfigProvider.setItem(key, value);\n            return this;\n        }\n\n        /**\n         * Get config item by dotted path.\n         * @memberof EnvAwareConfigProvider\n         * @param {string} key\n         * @param {*} defaultValue\n         * @returns {*}\n         */\n        getItem(key, defaultValue) {\n            return _.get(this.config, key, defaultValue);\n        }\n    };\n\nexport default EnvAwareConfigProviderF;\n"],"mappings":"oIAAA,IAAAA,SAAA,CAAAC,sBAAA,CAAAC,OAAA,eACA,IAAAC,KAAA,CAAAD,OAAA,eAA+B,SAAAD,uBAAAG,GAAA,SAAAA,GAAA,EAAAA,GAAA,CAAAC,UAAA,CAAAD,GAAA,EAAAE,OAAA,CAAAF,GAAA,EAQ/B,KAAM,CAAAG,uBAAuB,CAAGA,CAACC,GAAG,CAAEC,QAAQ,CAAEC,YAAY,CAAG,SAAS,GACpE,KAAM,CAQFC,WAAWA,CAACC,SAAS,CAAEC,QAAQ,CAAEC,OAAO,CAAG,aAAa,CAAE,CAMtD,IAAI,CAACC,kBAAkB,CAAG,GAAI,CAAAN,QAAQ,CAClCO,iBAAI,CAACC,IAAI,CAACL,SAAS,CAAEC,QAAQ,CAAG,GAAG,CAAGH,YAAY,CAAGF,GAAG,CAAC,CAC5D,CAOD,IAAI,CAACU,kBAAkB,CAAG,GAAI,CAAAT,QAAQ,CAClCO,iBAAI,CAACC,IAAI,CAACL,SAAS,CAAEC,QAAQ,CAAG,GAAG,CAAGC,OAAO,CAAGN,GAAG,CAAC,CACvD,CAED,IAAI,CAACW,QAAQ,CAAGL,OAAO,CAOvB,IAAI,CAACM,MAAM,CAAGC,SAClB,CAOA,KAAM,CAAAC,KAAKA,CAACC,MAAM,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,KAAI,CAACT,kBAAkB,CAACO,KAAK,CAACC,MAAM,CAAC,CAC7D,KAAM,CAAAE,SAAS,CAAG,KAAM,KAAI,CAACP,kBAAkB,CAACI,KAAK,CAACC,MAAM,CAAC,CAE7D,IAAI,CAACH,MAAM,CAAGM,OAAC,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAEF,SAAS,CAAED,SAAS,CAAC,CAClD,GAAID,MAAM,EAAI,CAACG,OAAC,CAACE,OAAO,CAACH,SAAS,CAAC,CAAE,CACjCF,MAAM,CAACM,GAAG,CACN,MAAM,CACL,2DAA0D,IAAI,CAACV,QAAS,aAAY,CAE7F,CAEA,MAAO,KAAI,CAACC,MAChB,CAOA,KAAM,CAAAU,KAAKA,CAAA,CAAG,CACV,KAAM,KAAI,CAACZ,kBAAkB,CAACY,KAAK,EACvC,CASAC,OAAOA,CAACC,GAAG,CAAEC,KAAK,CAAE,CAChBP,OAAC,CAACQ,GAAG,CAAC,IAAI,CAACd,MAAM,CAAEY,GAAG,CAAEC,KAAK,CAAC,CAC9B,IAAI,CAACf,kBAAkB,CAACa,OAAO,CAACC,GAAG,CAAEC,KAAK,CAAC,CAC3C,MAAO,KACX,CASAE,OAAOA,CAACH,GAAG,CAAEI,YAAY,CAAE,CACvB,MAAO,CAAAV,OAAC,CAACW,GAAG,CAAC,IAAI,CAACjB,MAAM,CAAEY,GAAG,CAAEI,YAAY,CAC/C,CACJ,CAAC,CAAC,IAAAE,QAAA,CAES/B,uBAAuB,CAAAgC,OAAA,CAAAjC,OAAA,CAAAgC,QAAA,CAAAE,MAAA,CAAAD,OAAA,CAAAA,OAAA,CAAAjC,OAAA"}