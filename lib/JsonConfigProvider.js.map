{"version":3,"file":"JsonConfigProvider.js","names":["_","require","fs","JsonConfigProvider","constructor","filePath","config","undefined","load_","logger","pathExists","readJson","log","save_","outputJson","spaces","setItem","key","value","set","getItem","defaultValue","get","module","exports"],"sources":["../src/JsonConfigProvider.js"],"sourcesContent":["'use strict';\n\nconst { _ } = require('@genx/july');\nconst { fs } = require('@genx/sys');\n\nclass JsonConfigProvider {\n    /**\n     * JSON file config data source\n     * @constructs JsonConfigProvider\n     * @param {string} filePath - The path of config file\n     */\n    constructor(filePath) {\n        this.filePath = filePath;\n\n        /**\n         * The loaded config\n         * @type {object}\n         * @public\n         */\n        this.config = undefined;\n    }\n\n    /**\n     * Start loading the config files\n     * @returns {Promise.<object>}\n     */\n    async load_(logger) {\n        if (await fs.pathExists(this.filePath)) {\n            this.config = await fs.readJson(this.filePath);\n            if (logger) {\n                logger.log(\n                    'info',\n                    `Configuration is loaded from \"${this.filePath}\"`\n                );\n            }\n        } else {\n            this.config = {};\n        }\n\n        return this.config;\n    }\n\n    /**\n     * Start saving the config to files\n     * @returns {Promise.<*>}\n     */\n    async save_() {\n        await fs.outputJson(this.filePath, this.config, { spaces: 4 });\n    }\n\n    /**\n     * Update config item by dotted path.\n     * @param {string} key - The path of config item, e.g. \"item.subItem.key\" refers to { item: { subItem: { key: \"*\" } } }\n     * @param {*} value - New value of config item\n     * @returns {JsonConfigProvider}\n     */\n    setItem(key, value) {\n        _.set(this.config, key, value);\n        return this;\n    }\n\n    /**\n     * Get config item by dotted path.\n     * @param {string} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getItem(key, defaultValue) {\n        return _.get(this.config, key, defaultValue);\n    }\n}\n\nmodule.exports = JsonConfigProvider;\n"],"mappings":"AAAA;;AAEA,MAAM;EAAEA;AAAF,IAAQC,OAAO,CAAC,YAAD,CAArB;;AACA,MAAM;EAAEC;AAAF,IAASD,OAAO,CAAC,WAAD,CAAtB;;AAEA,MAAME,kBAAN,CAAyB;EACrB;AACJ;AACA;AACA;AACA;EACIC,WAAW,CAACC,QAAD,EAAW;IAClB,KAAKA,QAAL,GAAgBA,QAAhB;IAEA;AACR;AACA;AACA;AACA;;IACQ,KAAKC,MAAL,GAAcC,SAAd;EACH;EAED;AACJ;AACA;AACA;;;EACe,MAALC,KAAK,CAACC,MAAD,EAAS;IAChB,IAAI,MAAMP,EAAE,CAACQ,UAAH,CAAc,KAAKL,QAAnB,CAAV,EAAwC;MACpC,KAAKC,MAAL,GAAc,MAAMJ,EAAE,CAACS,QAAH,CAAY,KAAKN,QAAjB,CAApB;;MACA,IAAII,MAAJ,EAAY;QACRA,MAAM,CAACG,GAAP,CACI,MADJ,EAEK,iCAAgC,KAAKP,QAAS,GAFnD;MAIH;IACJ,CARD,MAQO;MACH,KAAKC,MAAL,GAAc,EAAd;IACH;;IAED,OAAO,KAAKA,MAAZ;EACH;EAED;AACJ;AACA;AACA;;;EACe,MAALO,KAAK,GAAG;IACV,MAAMX,EAAE,CAACY,UAAH,CAAc,KAAKT,QAAnB,EAA6B,KAAKC,MAAlC,EAA0C;MAAES,MAAM,EAAE;IAAV,CAA1C,CAAN;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIC,OAAO,CAACC,GAAD,EAAMC,KAAN,EAAa;IAChBlB,CAAC,CAACmB,GAAF,CAAM,KAAKb,MAAX,EAAmBW,GAAnB,EAAwBC,KAAxB;;IACA,OAAO,IAAP;EACH;EAED;AACJ;AACA;AACA;AACA;AACA;;;EACIE,OAAO,CAACH,GAAD,EAAMI,YAAN,EAAoB;IACvB,OAAOrB,CAAC,CAACsB,GAAF,CAAM,KAAKhB,MAAX,EAAmBW,GAAnB,EAAwBI,YAAxB,CAAP;EACH;;AAhEoB;;AAmEzBE,MAAM,CAACC,OAAP,GAAiBrB,kBAAjB"}