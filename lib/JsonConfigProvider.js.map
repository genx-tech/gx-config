{"version":3,"file":"JsonConfigProvider.js","names":["_july","require","_sys","JsonConfigProvider","constructor","filePath","config","undefined","load_","logger","fs","pathExists","readJson","log","save_","outputJson","spaces","setItem","key","value","_","set","getItem","defaultValue","get","_default","exports","default","module"],"sources":["../src/JsonConfigProvider.js"],"sourcesContent":["import { _ } from '@genx/july';\nimport { fs } from '@genx/sys';\n\nclass JsonConfigProvider {\n    /**\n     * JSON file config data source\n     * @constructs JsonConfigProvider\n     * @param {string} filePath - The path of config file\n     */\n    constructor(filePath) {\n        this.filePath = filePath;\n\n        /**\n         * The loaded config\n         * @type {object}\n         * @public\n         */\n        this.config = undefined;\n    }\n\n    /**\n     * Start loading the config files\n     * @returns {Promise.<object>}\n     */\n    async load_(logger) {\n        if (await fs.pathExists(this.filePath)) {\n            this.config = await fs.readJson(this.filePath);\n            if (logger) {\n                logger.log(\n                    'info',\n                    `Configuration is loaded from \"${this.filePath}\"`\n                );\n            }\n        } else {\n            this.config = {};\n        }\n\n        return this.config;\n    }\n\n    /**\n     * Start saving the config to files\n     * @returns {Promise.<*>}\n     */\n    async save_() {\n        await fs.outputJson(this.filePath, this.config, { spaces: 4 });\n    }\n\n    /**\n     * Update config item by dotted path.\n     * @param {string} key - The path of config item, e.g. \"item.subItem.key\" refers to { item: { subItem: { key: \"*\" } } }\n     * @param {*} value - New value of config item\n     * @returns {JsonConfigProvider}\n     */\n    setItem(key, value) {\n        _.set(this.config, key, value);\n        return this;\n    }\n\n    /**\n     * Get config item by dotted path.\n     * @param {string} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getItem(key, defaultValue) {\n        return _.get(this.config, key, defaultValue);\n    }\n}\n\nexport default JsonConfigProvider;\n"],"mappings":"oIAAA,IAAAA,KAAA,CAAAC,OAAA,eACA,IAAAC,IAAA,CAAAD,OAAA,cAEA,KAAM,CAAAE,kBAAmB,CAMrBC,WAAWA,CAACC,QAAQ,CAAE,CAClB,IAAI,CAACA,QAAQ,CAAGA,QAAQ,CAOxB,IAAI,CAACC,MAAM,CAAGC,SAClB,CAMA,KAAM,CAAAC,KAAKA,CAACC,MAAM,CAAE,CAChB,GAAI,KAAM,CAAAC,OAAE,CAACC,UAAU,CAAC,IAAI,CAACN,QAAQ,CAAC,CAAE,CACpC,IAAI,CAACC,MAAM,CAAG,KAAM,CAAAI,OAAE,CAACE,QAAQ,CAAC,IAAI,CAACP,QAAQ,CAAC,CAC9C,GAAII,MAAM,CAAE,CACRA,MAAM,CAACI,GAAG,CACN,MAAM,CACL,iCAAgC,IAAI,CAACR,QAAS,GAAE,CAEzD,CACJ,CAAC,IAAM,CACH,IAAI,CAACC,MAAM,CAAG,CAAC,CACnB,CAEA,MAAO,KAAI,CAACA,MAChB,CAMA,KAAM,CAAAQ,KAAKA,CAAA,CAAG,CACV,KAAM,CAAAJ,OAAE,CAACK,UAAU,CAAC,IAAI,CAACV,QAAQ,CAAE,IAAI,CAACC,MAAM,CAAE,CAAEU,MAAM,CAAE,CAAE,CAAC,CACjE,CAQAC,OAAOA,CAACC,GAAG,CAAEC,KAAK,CAAE,CAChBC,OAAC,CAACC,GAAG,CAAC,IAAI,CAACf,MAAM,CAAEY,GAAG,CAAEC,KAAK,CAAC,CAC9B,MAAO,KACX,CAQAG,OAAOA,CAACJ,GAAG,CAAEK,YAAY,CAAE,CACvB,MAAO,CAAAH,OAAC,CAACI,GAAG,CAAC,IAAI,CAAClB,MAAM,CAAEY,GAAG,CAAEK,YAAY,CAC/C,CACJ,CAAC,IAAAE,QAAA,CAEctB,kBAAkB,CAAAuB,OAAA,CAAAC,OAAA,CAAAF,QAAA,CAAAG,MAAA,CAAAF,OAAA,CAAAA,OAAA,CAAAC,OAAA"}